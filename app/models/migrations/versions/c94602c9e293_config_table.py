"""config table

Revision ID: c94602c9e293
Revises:
Create Date: 2025-09-12 22:05:39.814969

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = "c94602c9e293"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "address",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email_address", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("display_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("address", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_address_email_address"), ["email_address"], unique=True)

    op.create_table(
        "folder",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("system_type", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("folder", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_folder_name"), ["name"], unique=True)
        batch_op.create_index(batch_op.f("ix_folder_system_type"), ["system_type"], unique=True)

    op.create_table(
        "priorityword",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("priorityword", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_priorityword_word"), ["word"], unique=True)

    op.create_table(
        "tag",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tag_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("tag", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_tag_tag_name"), ["tag_name"], unique=True)

    op.create_table(
        "vendor",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("vendor", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_vendor_name"), ["name"], unique=True)

    op.create_table(
        "message",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("subject", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("date_sent", sa.DateTime(), nullable=True),
        sa.Column("in_reply_to", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("references_list", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("is_read", sa.Boolean(), nullable=False),
        sa.Column("is_replied", sa.Boolean(), nullable=False),
        sa.Column("is_flagged", sa.Boolean(), nullable=False),
        sa.Column("is_forwarded", sa.Boolean(), nullable=False),
        sa.Column("rfc822_message_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("date_received", sa.DateTime(), nullable=False),
        sa.Column("vendor_id", sa.Integer(), nullable=False),
        sa.Column("folder_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["folder_id"], ["folder.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["vendor_id"], ["vendor.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("message", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_message_date_received"), ["date_received"], unique=False)
        batch_op.create_index(batch_op.f("ix_message_rfc822_message_id"), ["rfc822_message_id"], unique=True)

    op.create_table(
        "priorityperson",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address_id", sa.Integer(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["address_id"],
            ["address.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("priorityperson", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_priorityperson_address_id"), ["address_id"], unique=True)

    op.create_table(
        "messageaddressmap",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.Column("address_id", sa.Integer(), nullable=False),
        sa.Column("address_type", sa.Enum("FROM", "TO", "CC", "BCC", name="addresstype"), nullable=False),
        sa.CheckConstraint("address_type in ('from','to','cc','bcc')", name="ck_message_address_map_address_type"),
        sa.ForeignKeyConstraint(["address_id"], ["address.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["message_id"], ["message.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("message_id", "address_id", "address_type"),
    )
    op.create_table(
        "messagepart",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("mime_type", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("mime_subtype", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("filename", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("content_disposition", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("content", sa.LargeBinary(), nullable=True),
        sa.Column("part_order", sa.Integer(), nullable=True),
        sa.Column("is_attachment", sa.Boolean(), nullable=True),
        sa.Column("size_bytes", sa.Integer(), nullable=True),
        sa.Column("message_id", sa.Integer(), nullable=True),
        sa.Column("parent_part_id", sa.Integer(), nullable=True),
        sa.Column("content_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(["message_id"], ["message.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["parent_part_id"], ["messagepart.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("messagepart", schema=None) as batch_op:
        batch_op.create_index(
            "ix_message_part_message_id_is_attachment_part_order",
            ["message_id", "is_attachment", "part_order"],
            unique=False,
        )
        batch_op.create_index(batch_op.f("ix_messagepart_content_id"), ["content_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_messagepart_message_id"), ["message_id"], unique=False)

    op.create_table(
        "messagetagmap",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["message_id"], ["message.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["tag_id"], ["tag.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("message_id", "tag_id"),
    )
    op.create_table(
        "messageword",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.Column("word", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("tf", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["message_id"], ["message.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("message_id", "word"),
    )
    with op.batch_alter_table("messageword", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_messageword_word"), ["word"], unique=False)

    op.create_table(
        "summary",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("message_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["message_id"], ["message.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("summary", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_summary_message_id"), ["message_id"], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("summary", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_summary_message_id"))

    op.drop_table("summary")
    with op.batch_alter_table("messageword", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_messageword_word"))

    op.drop_table("messageword")
    op.drop_table("messagetagmap")
    with op.batch_alter_table("messagepart", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_messagepart_message_id"))
        batch_op.drop_index(batch_op.f("ix_messagepart_content_id"))
        batch_op.drop_index("ix_message_part_message_id_is_attachment_part_order")

    op.drop_table("messagepart")
    op.drop_table("messageaddressmap")
    with op.batch_alter_table("priorityperson", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_priorityperson_address_id"))

    op.drop_table("priorityperson")
    with op.batch_alter_table("message", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_message_rfc822_message_id"))
        batch_op.drop_index(batch_op.f("ix_message_date_received"))

    op.drop_table("message")
    with op.batch_alter_table("vendor", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_vendor_name"))

    op.drop_table("vendor")
    with op.batch_alter_table("tag", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_tag_tag_name"))

    op.drop_table("tag")
    with op.batch_alter_table("priorityword", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_priorityword_word"))

    op.drop_table("priorityword")
    with op.batch_alter_table("folder", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_folder_system_type"))
        batch_op.drop_index(batch_op.f("ix_folder_name"))

    op.drop_table("folder")
    with op.batch_alter_table("address", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_address_email_address"))

    op.drop_table("address")
    # ### end Alembic commands ###
